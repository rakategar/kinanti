generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = "postgresql://postgres.wgdxgzraacfhfbxvxuzy:@Kinantiku1@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres?pgbouncer=true&connection_limit=1"
  directUrl = "postgresql://postgres.wgdxgzraacfhfbxvxuzy:@Kinantiku1@aws-0-ap-southeast-1.pooler.supabase.com:5432/postgres?pgbouncer=true&connection_limit=1"
}
model User {
  id        Int    @id @default(autoincrement()) 
  nama      String
  phone     String  @unique // Nomor WhatsApp
  password  String @default("")
  role      Role  
  kelas     Kelas?
  guruTugas Assignment[] @relation("GuruTugas") 
  tugas     AssignmentStatus[] // Menyimpan status tugas siswa
  submissions AssignmentSubmission[] // Relasi ke tugas yang dikumpulkan siswa
}

model Assignment {
  id          Int      @id @default(autoincrement()) 
  kode        String   @unique 
  guru        User     @relation("GuruTugas", fields: [guruId], references: [id]) 
  guruId      Int
  kelas       String  
  judul       String
  deskripsi   String
  pdfUrl      String?  // Bisa null jika guru tidak melampirkan PDF
  lampirkanPDF Boolean @default(false) // Apakah tugas memerlukan PDF?
  createdAt   DateTime @default(now()) 
  deadline    DateTime? // Kolom baru untuk menyimpan deadline (opsional)
  status      AssignmentStatus[] // Relasi ke status tugas siswa
  submissions AssignmentSubmission[] // Relasi ke tugas yang dikumpulkan siswa
}

// Model untuk menyimpan status tugas siswa (apakah selesai atau belum)
model AssignmentStatus {
  id        Int      @id @default(autoincrement())
  siswa     User     @relation(fields: [siswaId], references: [id])
  siswaId   Int
  tugas     Assignment @relation(fields: [tugasId], references: [id])
  tugasId   Int
  status    TugasStatus @default(BELUM_SELESAI)
}

// Model baru untuk menyimpan tugas yang dikumpulkan siswa
model AssignmentSubmission {
  id        Int      @id @default(autoincrement())
  siswa     User     @relation(fields: [siswaId], references: [id])
  siswaId   Int
  tugas     Assignment @relation(fields: [tugasId], references: [id])
  tugasId   Int
  pdfUrl    String?  // Bisa null jika tidak ada lampiran
  status    TugasStatus @default(SELESAI) // Status tugas (opsional)
  createdAt DateTime @default(now()) 
}

enum Role {
  guru
  siswa
}

enum Kelas {
  XTKJ1
  XTKJ2
  XITKJ1
  XITKJ2
  XIITKJ1
  XIITKJ2
  TPTUP
}

enum TugasStatus {
  BELUM_SELESAI
  SELESAI
}
